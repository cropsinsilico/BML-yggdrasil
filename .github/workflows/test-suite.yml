name: Test of package installation & execution
'on':
  push:
    branches-ignore:
     - gh-pages
    tags:
     - '*'
  schedule:
  - cron: 0 10 * * 1
jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        yggdrasil-version: [latest]
        biocro-version: [latest]
        sundials-version: [latest]
      fail-fast: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      ###################################
      # CONDA SETUP
      ###################################
      - name: Set up MSVC Compiler on windows
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'
      - name: Set up miniconda test environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: yggdrasilBML
          environment-file: environment_no_r.yml
          auto-update-conda: true
          channels: conda-forge
          channel-priority: strict
          miniforge-variant: Miniforge3
          miniforge-version: latest
          conda-remove-defaults: true
      - name: Install specific version of Yggdrasil via conda
        if: matrix.yggdrasil-version != 'latest'
        run: |
          conda install yggdrasil==${{ matrix.yggdrasil-version }} -y
      - name: Install specific version of Sundials via conda
        if: matrix.sundials-version != 'latest'
        run: |
          conda install sundials==${{ matrix.sundials-version }} -y
      - name: Check conda installation
        run: |
          conda info
          conda list
      - name: Install doxgen on unix systems
        if: matrix.os != 'windows-latest'
        run: |
          conda install doxygen>=1.9.2 graphviz -y
      - name: Install compilers using conda on Linux/Mac
        if: matrix.os != 'windows-latest'
        run: |
          conda install c-compiler cxx-compiler
      - name: Install R (Windows)
        uses: r-lib/actions/setup-r@v2
        if: matrix.os == 'windows-latest'
        # with:
        #   r-version: '4.3.3'
      - name: Install R (Unix)
        if: matrix.os != 'windows-latest'
        run:
          conda install yggdrasil.r

      ###################################
      # Install packages
      ###################################
      - name: Install yggdrasilBML, BMLephoto, & BioCro
        run: |
          bash install.sh
      - name: Install specific version of BioCro via CRAN
        if: matrix.biocro-version != 'latest'
        run: |
          Rscript -e "install.packages('BioCro', version='${{ matrix.biocro-version }}', repos='https://cran.rstudio.com')"
      
      ###################################
      # Test
      ###################################
      - name: Check installed packages
        run: |
          conda list
          ygginfo --verbose
      - name: Test isolated BioCro
        run: |
          yggrun yamls/biocro.yml
      - name: Test BioCro w/ BMLephoto
        run: |
          yggrun yamls/biocro_ephoto.yml
      - name: Test BioCro-ePhotosynthesis integration via yggdrasilBML
        run: |
          yggrun yamls/biocro_ephoto_ygg.yml
      # - name: Test BioCro-OpenSimRoot integration
      #   run: |
      #     yggrun yamls/biocro_osr.yml
